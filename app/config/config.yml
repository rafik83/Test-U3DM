imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: upload.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # default locale
    locale: fr
    # allowed locales in URL (fr|en|es ...)
    app.locales: fr
    # admin virtual directory
    app.admin_directory: admin-u3dm
    # user virtual directory
    app.user_directory: mon-compte

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets:
        # feature is supported in Symfony 3.3 and higher
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        www_base_url: '%www_base_url%'
        crisp_website_id: '%crisp_website_id%'
        ga_tracking_id: '%ga_tracking_id%'
        gads_id: '%gads_id%'
        gtag_manager_id: '%gtag_manager_id%'
        google_api_key: '%google_api_key%'
        pathToWeb: '%kernel.project_dir%/web' # useful for images in PDF
    form_themes:
        - 'bootstrap_3_horizontal_layout.html.twig'
        - 'form/fields.html.twig'
        - 'TetranzSelect2EntityBundle:Form:fields.html.twig'
        - 'form/jquery.collection.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            datetime: AppBundle\DoctrineExtensions\DBAL\Types\UTCDateTimeType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    spool: { type: memory }

# DoctrineExtensionBundle Configuration
stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
            sortable: true

# MailjetBundle Configuration
mailjet:
    api_key:    '%mailer_user%'
    secret_key: '%mailer_password%'

# SendinBlueBundle Configuration
sendinblue_api:
    endpoints: ['smtp', 'contacts']
    key: '%sendinblue_api_key%'

# VichUploaderBundle Configuration
vich_uploader:
    db_driver: orm
    mappings:
        maker_profile:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/profile'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        maker_portfolio:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/portfolio'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        identity_paper:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/identy-paper'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        message_attachment:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/message/attachment'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        model_attachment:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/model/attachment'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        model_portfolio:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/model/portfolio'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        comment_portfolio:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/maker/model/commentPortfolio'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
        ref_image:
            uri_prefix: ''
            upload_destination: '%kernel.project_dir%/var/uploads/ref'
            namer: Vich\UploaderBundle\Naming\UniqidNamer

# LiipImagineBundle Configuration
liip_imagine:
    resolvers:
        default:
            web_path: ~
    loaders:
        maker_profile:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/maker/profile"
        maker_portfolio:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/maker/portfolio"
        model_portfolio:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/maker/model/portfolio"
        comment_portfolio:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/maker/model/commentPortfolio"
        identity_paper:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/maker/identy-paper"
        ref_image:
            filesystem:
                data_root: "%kernel.project_dir%/var/uploads/ref"
    filter_sets:
        cache: ~
        maker_profile:
            data_loader: maker_profile
            quality: 75
            filters:
                thumbnail  : { size : [150, 150], mode : outbound }
        maker_profile_small:
            data_loader: maker_profile
            quality: 75
            filters:
                thumbnail  : { size : [110, 110], mode : outbound }
        maker_portfolio:
            data_loader: maker_portfolio
            quality: 75
            filters:
                thumbnail: { size : [900, 600], mode : outbound, allow_upscale: true }
        maker_portfolio_small:
            data_loader: maker_portfolio
            quality: 75
            filters:
                thumbnail: { size : [300, 200], mode : outbound, allow_upscale: true }
        model_portfolio:
            data_loader: model_portfolio
            quality: 75
            filters:
                thumbnail: { size : [800, 800], mode : outbound, allow_upscale: true }
        model_portfolio_small:
            data_loader: model_portfolio
            quality: 75
            filters:
                thumbnail: { size : [300, 300], mode : outbound, allow_upscale: true }
        comment_portfolio:
            data_loader: comment_portfolio
            quality: 75
            filters:
                thumbnail: { size : [300, 300], mode : outbound, allow_upscale: true }
        identity_paper:
            data_loader: identity_paper
            quality: 75
            filters:
                thumbnail: { size : [450, 450], mode : inset }
        ref_image:
            data_loader: ref_image
            quality: 75
            filters:
                thumbnail: { size : [280, 280], mode : inset }

# KnpSnappyBundle Configuration
#knp_snappy:
#    pdf:
#        enabled:    true
#        binary:     '%snappy_lib_path%'
#    image:
#        enabled:    false
knp_snappy:
    pdf:
        enabled:    true
        binary:     /usr/bin/wkhtmltopdf
        options:    []
    image:
        enabled:    true
        binary:     /usr/bin/wkhtmltoimage
        options:    []